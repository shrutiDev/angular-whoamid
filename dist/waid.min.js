function config(){this.config={};this.mergeRecursive=function(obj1,obj2){for(var p in obj2){try{if(obj2[p].constructor==Object){obj1[p]=this.mergeRecursive(obj1[p],obj2[p])}else{obj1[p]=obj2[p]}}catch(e){obj1[p]=obj2[p]}}return obj1};this.patchConfig=function(key,config){this[key]=this.mergeRecursive(this[key],config)};this.setConfig=function(key,config){this[key]=config};this.getConfig=function(key){parts=key.split(".");if(parts.length>0){var config=this;for(var i=0;i<parts.length;i++){if(typeof config[parts[i]]!=="undefined"){if(typeof config[parts[i]]=="object"){config=config[parts[i]];continue}else{return config[parts[i]]}}else{return false}}}return this[key]}}function waid(){this.config=new config}var waid=new waid;waid.config.setConfig("api",{environment:{development:{url:"http://dev.whoamid.com:8000/nl/api"},test:{url:"http://api.test.whoamid.com:8001/nl/api"},staging:{url:"http://api.test.whoamid.com:8002/nl/api"},production:{url:"http://api.whoamid.com/nl/api"}},errorCodes:{"auth-cancelled":"Authentication was canceled by the user.","auth-failed":"Authentication failed for some reason.","auth-unknown-error":"An unknown error stoped the authentication process.","auth-missing-parameter":"A needed parameter to continue the process was missing, usually raised by the services that need some POST data like myOpenID.","auth-state-missing":"The state parameter is missing from the server response.","auth-state-forbidden":"The state parameter returned by the server is not the one sent.","auth-token-error":"Unauthorized or access token error, it was invalid, impossible to authenticate or user removed permissions to it.","auth-already-associated":"A different user has already associated the social account that the current user is trying to associate.","system-error":"System error, failed for some reason."}});waid.config.setConfig("core",{templates:{core:"/core/templates/core.html"}});"use strict";angular.module("waid.core.services",["app"]).service("waidService",function idm($q,$http,$cookies,$rootScope,$location,Slug){var service={API_URL:"",apiVersion:"v1",token:null,authenticated:false,fp:"",request:function(args){var that=this;$http.defaults.headers.common["X-CSRFToken"]=$cookies.get("csrftoken");if(this.token!=null&&this.token!=""&&this.token!="null"){$http.defaults.headers.common["Authorization"]="Token "+this.token}else{$http.defaults.headers.common["Authorization"]=null}$http.defaults.headers.common["FPID"]=this.fp;var headers={};if(typeof args.headers!="undefined"){angular.extend(headers,args.headers)}params=args.params||{};args=args||{};var deferred=$q.defer(),url=this.API_URL+args.url,method=args.method||"GET",params=params,data=args.data||{};$http({url:url,method:method.toUpperCase(),headers:headers,params:params,data:data}).success(angular.bind(this,function(data,status,headers,config){deferred.resolve(data,status)})).error(angular.bind(this,function(data,status,headers,config){if(data){data.status=status}if(status==0){if(data==""){data={};data["status"]=0;data["non_field_errors"]=["Could not connect. Please try again."]}if(data==null){data={};data["status"]=0;data["non_field_errors"]=["Server timed out. Please try again."]}}deferred.reject(data,status,headers,config)}));return deferred.promise},_login:function(token){$cookies.put("token",token);this.token=token;this.authenticate()},_clearAuthorizationData:function(){this.authenticated=false;$cookies.remove("token");this.token=null},_makeFileRequest:function(method,path,broadcast,data){var deferred=$q.defer();this.request({method:method,url:path,data:data,headers:{"Content-Type":undefined}}).then(function(data){$rootScope.$broadcast("waid.services."+broadcast+"."+method.toLowerCase()+".ok",data);deferred.resolve(data)},function(data){$rootScope.$broadcast("waid.services."+broadcast+"."+method.toLowerCase()+".error",data);deferred.reject(data)});return deferred.promise},_makeRequest:function(method,path,broadcast,data){var deferred=$q.defer();this.request({method:method,url:path,data:data}).then(function(data){$rootScope.$broadcast("waid.services."+broadcast+"."+method.toLowerCase()+".ok",data);deferred.resolve(data)},function(data){$rootScope.$broadcast("waid.services."+broadcast+"."+method.toLowerCase()+".error",data);deferred.reject(data)});return deferred.promise},_getAdminUrl:function(url){return"/admin/"+this.apiVersion+"/"+$rootScope.waid.account.id+url},_getAppUrl:function(url){return"/application/"+this.apiVersion+"/"+$rootScope.waid.account.id+"/"+$rootScope.waid.application.id+url},_getPublicUrl:function(url){return"/public/"+this.apiVersion+url},userRegisterPost:function(data){if(typeof data.return_url=="undefined"||data.return_url==""){data.return_url=$location.absUrl()+"?waidAlCode=[code]"}return this._makeRequest("POST",this._getAppUrl("/user/register/"),"application.userRegister",data)},userCompleteProfilePost:function(data){if(typeof data.return_url=="undefined"||data.return_url==""){data.return_url=$location.absUrl()+"?waidAlCode=[code]"}return this._makeRequest("POST",this._getAppUrl("/user/complete-profile/"),"application.userCompleteProfile",data)},userCompleteProfileGet:function(){return this._makeRequest("GET",this._getAppUrl("/user/complete-profile/"),"application.userCompleteProfile")},userLoginPost:function(data){var that=this;return this._makeRequest("POST",this._getAppUrl("/user/login/"),"application.userLogin",data).then(function(data){that._login(data.token);return data})},userAutoLoginGet:function(code){var that=this;return this._makeRequest("GET",this._getAppUrl("/user/autologin/"+code+"/"),"application.userAutoLogin").then(function(data){that._login(data.token);return data})},userLostLoginPost:function(data){return this._makeRequest("POST",this._getAppUrl("/user/lost-login/"),"application.userLostLogin",data)},userLogoutPost:function(){var that=this;return this._makeRequest("POST",this._getAppUrl("/user/logout/"),"application.userLogout").then(function(data){that._clearAuthorizationData();return data})},userLogoutAllPost:function(){var that=this;return this._makeRequest("POST",this._getAppUrl("/user/logout-all/"),"application.userLogoutAll").then(function(data){that._clearAuthorizationData();return data})},userProfileGet:function(){return this._makeRequest("GET",this._getAppUrl("/user/profile/"),"application.userProfile")},userPasswordPut:function(data){return this._makeRequest("PUT",this._getAppUrl("/user/password/"),"application.userPassword",data)},userProfilePatch:function(data){return this._makeRequest("PATCH",this._getAppUrl("/user/profile/"),"application.userProfile",data)},userUsernamePut:function(data){return this._makeRequest("PUT",this._getAppUrl("/user/username/"),"application.userUsername",data)},userEmailListGet:function(){return this._makeRequest("GET",this._getAppUrl("/user/email/"),"application.userEmailList")},userEmailPost:function(data){if(typeof data.return_url=="undefined"||data.return_url==""){data.return_url=$location.absUrl()+"?waidAlCode=[code]"}return this._makeRequest("POST",this._getAppUrl("/user/email/"),"application.userEmail",data)},userEmailDelete:function(id){return this._makeRequest("DELETE",this._getAppUrl("/user/email/"+id+"/"),"application.userEmail")},userAvatarPut:function(fd){return this._makeFileRequest("PUT",this._getAppUrl("/user/avatar/"),"application.userAvatar",fd)},socialProviderListGet:function(){return this._makeRequest("GET",this._getAppUrl("/social/providers/"),"application.socialProviderList")},userCommentsPatch:function(id,data){return this._makeRequest("PATCH",this._getAppUrl("/user/comments/"+id+"/"),"application.userComments",data)},userCommentsPost:function(data){if(typeof data.thread_id=="undefined"){data.thread_id=Slug.slugify($location.absUrl())}data.url=$location.absUrl();return this._makeRequest("POST",this._getAppUrl("/user/comments/"),"application.userComments",data)},userCommentsDelete:function(id){return this._makeRequest("DELETE",this._getAppUrl("/user/comments/"+id+"/"),"application.userComments")},userCommentsListGet:function(params){if(typeof params!="undefined"){if(typeof params.thread_id!="undefined"&&params.thread_id=="currenturl"){params.thread_id=Slug.slugify($location.absUrl())}var query="?"+$.param(params)}else{var query=""}return this._makeRequest("GET",this._getAppUrl("/user/comments/"+query),"application.userCommentsList")},commentsListGet:function(params){if(typeof params!="undefined"){if(typeof params.thread_id!="undefined"&&params.thread_id=="currenturl"){params.thread_id=Slug.slugify($location.absUrl())}var query="?"+$.param(params)}else{var query=""}return this._makeRequest("GET",this._getAppUrl("/comments/"+query),"application.commentsList")},commentsVotePost:function(id,vote){var data={vote:vote};return this._makeRequest("POST",this._getAppUrl("/comments/"+id+"/vote/"),"application.commentsVote",data)},commentsMarkPost:function(id,mark){var data={mark:mark};return this._makeRequest("POST",this._getAppUrl("/comments/"+id+"/mark/"),"application.commentsMark",data)},articlesListGet:function(){return this._makeRequest("GET",this._getAppUrl("/articles/"),"application.articlesList")},articlesGet:function(id){return this._makeRequest("GET",this._getAppUrl("/articles/"+id+"/"),"application.articles")},adminAccountGet:function(){return this._makeRequest("GET",this._getAdminUrl("/account/"),"admin.account")},adminAccountPatch:function(data){return this._makeRequest("PATCH",this._getAdminUrl("/account/"),"admin.account",data)},adminApplicationListGet:function(){return this._makeRequest("GET",this._getAdminUrl("/application/"),"admin.applicationList")},adminApplicationGet:function(id){return this._makeRequest("GET",this._getAdminUrl("/application/"+id+"/"),"admin.application")},adminApplicationPatch:function(data){return this._makeRequest("PATCH",this._getAdminUrl("/application/"+data.id+"/"),"admin.application",data)},publicAccountGet:function(account){return this._makeRequest("GET",this._getPublicUrl("/account/"+account+"/"),"admin.account")},publicAccountCreatePost:function(data){data.redirect_to_url=$location.absUrl()+"admin/"+data.slug+"/";return this._makeRequest("POST",this._getPublicUrl("/account/create/"),"admin.accountCreate",data)},authenticate:function(){var that=this;var deferred=$q.defer();this.token=$cookies.get("token");if(this.token!=null&&this.token!=""&&this.token!="null"){this.userProfileGet().then(function(data){that.authenticated=true;$rootScope.$broadcast("waid.services.authenticate.ok",that);deferred.resolve(data)},function(data){$rootScope.$broadcast("waid.services.authenticate.error",that);deferred.reject(data)})}else{$rootScope.$broadcast("waid.services.authenticate.error");deferred.reject()}return deferred.promise},getAccountId:function(){return $rootScope.waid.account.id},initialize:function(url){var that=this;if(window.location.port=="8000"){this.API_URL=waid.config.getConfig("api.environment.development.url")}else if(window.location.port=="8001"){this.API_URL=waid.config.getConfig("api.environment.test.url")}else if(window.location.port=="8002"){this.API_URL=waid.config.getConfig("api.environment.staging.url")}else{this.API_URL=waid.config.getConfig("api.environment.production.url")}(new Fingerprint2).get(function(result,components){that.fp=result;that.fpComponents=components});return this}};service.initialize();return service});waid.config.setConfig("idm",{templates:{userProfileNavbar:"/idm/templates/user-profile-navbar.html",userProfileStatusButton:"/idm/templates/user-profile-status-button.html",termsAndConditionsModal:"/idm/templates/terms-and-conditions-modal.html",completeProfile:"/idm/templates/complete-profile.html",lostLoginModal:"/idm/templates/lost-login-modal.html",loginAndRegisterModal:"/idm/templates/login-and-register-modal.html",userProfileModal:"/idm/templates/user-profile-modal.html"},translations:{}});waid.config.patchConfig("idm",{translations:{}});"use strict";angular.module("waid.idm.controllers",["waid.core.services"]).controller("ClientSocialError",function($scope,$rootScope,growl,$routeParams,$location){growl.addErrorMessage(config.errorCodes[$routeParams.error])}).controller("WAIDIdmUserProfileHomeCtrl",function($scope,waidService,$routeParams){$scope.currentProfilePage="overview";$scope.showProfilePage=function(page){return page==$scope.currentProfilePage?true:false};$scope.getActiveProfilePageMenuClass=function(page){return page==$scope.currentProfilePage?"active":""};$scope.goToProfilePage=function(page){$scope.currentProfilePage=page}}).controller("WAIDCompleteProfileCtrl",function($scope,$location,$window,waidService,$uibModalInstance){$scope.mode="complete";$scope.close=function(){$uibModalInstance.dismiss("close")}}).controller("WAIDLoginCtrl",function($scope,$location,waidService){$scope.model={username:"",password:""};$scope.errors=[];$scope.login=function(){waidService.userLoginPost($scope.model).then(function(data){},function(data){$scope.errors=data})}}).controller("WAIDLostLoginCtrl",function($scope,$location,waidService){$scope.model={email:""};$scope.errors=[];$scope.submit=function(){waidService.userLostLoginPost($scope.model).then(function(data){$scope.errors=[]},function(data){$scope.errors=data})}}).controller("WAIDUserProfileInterestsCtrl",function($scope,$rootScope,$location,waidService){$scope.model={};waidService.userProfileGet().then(function(data){$scope.errors=[];$scope.model=data},function(data){$scope.errors=data});$scope.save=function(){waidService.userProfilePatch($scope.model).then(function(data){$scope.errors=[]},function(data){$scope.errors=data})}}).controller("WAIDUserProfileOverviewCtrl",function($scope,$rootScope,$location,waidService){waidService.userProfileGet().then(function(data){$scope.errors=[];$scope.model=data},function(data){$scope.errors=data});waidService.userEmailListGet().then(function(data){$scope.emails=data})}).controller("WAIDUserProfileMainCtrl",function($scope,$rootScope,$location,waidService,$filter,$timeout){$scope.model={};$scope.isUploading=false;$scope.dateOptions={dateDisabled:false,maxDate:new Date,minDate:new Date(1940,1,1),startingDay:1,datepickerMode:"year"};$scope.popup={opened:false};$scope.open=function(){$scope.popup.opened=true};$scope.updateProfileInfo=function(){waidService.userProfileGet().then(function(data){$scope.errors=[];if(data.date_of_birth){var dateParts=data.date_of_birth.split("-");data.date_of_birth=new Date(dateParts[0],dateParts[1]-1,dateParts[2])}$scope.model=data},function(data){$scope.errors=data})};$scope.uploadFile=function(files){$scope.isUploading=true;var fd=new FormData;fd.append("file",files[0]);waidService.userAvatarPut(fd).then(function(data){$timeout(function(){$scope.updateProfileInfo();$scope.isUploading=false},1e3)})};$scope.save=function(){$scope.model.date_of_birth=$filter("date")($scope.model.date_of_birth,"yyyy-MM-dd");waidService.userProfilePatch($scope.model).then(function(data){$scope.errors=[]},function(data){$scope.errors=data})};$scope.updateProfileInfo()}).controller("WAIDUserProfilePasswordCtrl",function($scope,$rootScope,$location,waidService,$filter){$scope.model={};$scope.save=function(){waidService.userPasswordPut($scope.model).then(function(data){$scope.errors=[];$scope.model={}},function(data){$scope.errors=data})}}).controller("WAIDUserProfileUsernameCtrl",function($scope,$rootScope,$location,waidService,$filter){waidService.userProfileGet().then(function(data){$scope.errors=[];$scope.model={username:data.username}},function(data){$scope.errors=data});$scope.save=function(){waidService.userUsernamePut($scope.model).then(function(data){$scope.errors=[]},function(data){$scope.errors=data})}}).controller("WAIDUserProfileEmailCtrl",function($scope,$rootScope,$location,waidService){$scope.inactiveEmails=[];$scope.activeEmails=[];$scope.emailAdd="";$scope.initEmails=function(data){$scope.inactiveEmails=[];$scope.activeEmails=[];if(data.length>0){for(var i=0;i<data.length;i++){if(data[i].is_verified==1){$scope.activeEmails.push(data[i])}else{$scope.inactiveEmails.push(data[i])}}}};$scope.deleteEmail=function(id){waidService.userEmailDelete(id).then(function(data){$scope.errors=[];$scope.loadEmailList()},function(data){$scope.errors=data})};$scope.addEmail=function(){var data={email:$scope.emailAdd};waidService.userEmailPost(data).then(function(data){$scope.errors=[];$scope.loadEmailList();$scope.emailAdd=""},function(data){$scope.errors=data})};$scope.loadEmailList=function(){waidService.userEmailListGet().then(function(data){$scope.initEmails(data)})};$scope.loadEmailList()}).controller("WAIDSocialCtrl",function($scope,$location,waidService,$window){$scope.providers=[];$scope.getProviders=function(){waidService.socialProviderListGet().then(function(data){$scope.providers=data})};$scope.goToSocialLogin=function(provider){$window.location.assign(provider.url)};$scope.$watch("waid",function(waid){if(waid.account&&waid.application){$scope.getProviders()}},true)}).controller("WAIDRegisterCtrl",function($scope,$route,waidService,$location,$uibModal){$scope.show={};$scope.missingEmailVerification=false;if($scope.modus=="complete"){waidService.userCompleteProfileGet().then(function(data){$scope.model=data.user;if(typeof data.profile_status!="undefined"&&data.profile_status.indexOf("email_is_not_verified")!==-1){$scope.missingEmailVerification=true}for(var i=0;i<data.missing_data.length;i++){$scope.show[data.missing_data[i]]=true}},function(data){})}else{$scope.missingEmailVerification=false;$scope.show={username:true,password:true,email:true,terms_and_conditions_check:true}}$scope.register=function(){if($scope.model.terms_and_conditions_check){$scope.errors=[];if($scope.modus=="complete"){waidService.userCompleteProfilePost($scope.model).then(function(data){$scope.model={};$scope.close()},function(data){$scope.errors=data})}else{waidService.userRegisterPost($scope.model).then(function(data){$scope.model={}},function(data){$scope.errors=data})}}}});"use strict";angular.module("waid.idm.directives",["waid.idm.controllers"]).directive("waidUserProfileNavbar",function(){return{restrict:"E",templateUrl:function(elem,attrs){return attrs.templateUrl||waid.config.idm.templates.userProfileNavbar}}}).directive("waidUserProfileStatusButton",function(){return{restrict:"E",templateUrl:function(elem,attrs){return attrs.templateUrl||waid.config.idm.templates.userProfileStatusButton}}});